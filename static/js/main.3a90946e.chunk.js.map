{"version":3,"sources":["styles/GlobalStyle.js","hooks/usePostsData.jsx","Contexts/ProjectsContext.jsx","Contexts/ThemeContext.jsx","components/Header/styles.js","components/Header/index.jsx","components/Container/styles.js","components/Project/styles.js","components/Project/index.jsx","components/Container/index.jsx","index.js"],"names":["GlobalStyle","createGlobalStyle","isDarkTheme","getProjects","setLoading","setPosts","setError","db","firebase","firestore","collection","get","then","querySnapshot","newPosts","forEach","doc","push","id","data","catch","dbError","ProjectsContext","createContext","ProjectsProvider","children","useState","posts","loading","error","reloaded","setReloaded","useEffect","usePostsData","projects","Provider","value","reload","ThemeContext","ThemeProvider","setIsDarkTheme","Wrapper","styled","header","Logo","h2","HorizonalWrapper","div","HeaderButton","button","BellIcon","GoBell","GithubIcon","GoMarkGithub","HighBrightnessIcon","MdBrightness7","LowBrightnessIcon","MdBrightness4","Header","useContext","type","onClick","e","window","open","ProjectsList","ul","li","Img","img","Title","h3","Desc","p","ButtonLinkList","LinkButton","LinkIcon","AiOutlineLink","TrelloIcon","FaTrello","LinkName","Project","desc","imgUrl","links","title","src","map","name","url","key","includes","IconPicker","Container","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3a90946e.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n    body {\n    margin: 0;\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n        'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n        sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    }\n\n    #root {\n        --primaryColor: ${({ isDarkTheme }) =>\n          isDarkTheme ? '#333333' : '#4CAF50'};\n        --primaryTextColor:  ${({ isDarkTheme }) =>\n          isDarkTheme ? '#FFFFFF' : 'rgba(0, 0, 0, 0.87)'};\n        --secondaryTextColor:  ${({ isDarkTheme }) =>\n          isDarkTheme ? 'rgba(255, 255, 255, 0.7)' : 'rgba(0, 0, 0, 0.54)'};\n        --headerSize: 65px;\n        --backgroundColor: ${({ isDarkTheme }) =>\n          isDarkTheme ? '#212121' : '#F5F5F5'};\n        --cardColor: ${({ isDarkTheme }) =>\n          isDarkTheme ? '#333333' : '#FFFFFF'};\n        --borderRadius: 3px;\n    }\n`;\n","import { useState, useEffect } from 'react';\nimport firebase from 'firebase';\n\nconst getProjects = (setLoading, setPosts, setError) => {\n  const db = firebase.firestore();\n  setLoading(true);\n  db.collection('posts')\n    .get()\n    .then(querySnapshot => {\n      const newPosts = [];\n      querySnapshot.forEach(doc => {\n        newPosts.push({ id: doc.id, ...doc.data() });\n      });\n      setPosts(newPosts);\n      setLoading(false);\n    })\n    .catch(dbError => {\n      setLoading(false);\n      setError(dbError);\n    });\n};\n\nexport const usePostsData = () => {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reloaded, setReloaded] = useState(0);\n\n  useEffect(() => getProjects(setLoading, setPosts, setError), []);\n  useEffect(() => getProjects(setLoading, setPosts, setError), [reloaded]);\n\n  return [posts, loading, error, reloaded, setReloaded];\n};\n","import React, { createContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { usePostsData } from '../hooks/usePostsData';\n\nconst ProjectsContext = createContext();\n\nexport const ProjectsProvider = ({ children }) => {\n  const [projects, loading, error, reloaded, setReloaded] = usePostsData();\n\n  const reload = () => setReloaded(reloaded + 1);\n\n  return (\n    <ProjectsContext.Provider\n      value={{\n        projects: { data: projects, loading, error },\n        reload,\n      }}\n    >\n      {children}\n    </ProjectsContext.Provider>\n  );\n};\n\nProjectsProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default ProjectsContext;\n","import React, { createContext, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [isDarkTheme, setIsDarkTheme] = useState(false);\n\n  return (\n    <ThemeContext.Provider\n      value={{\n        isDarkTheme,\n        setIsDarkTheme,\n      }}\n    >\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nThemeProvider.propTypes = {\n  children: PropTypes.elementType.isRequired,\n};\n\nexport default ThemeContext;\n","import styled from 'styled-components';\nimport { GoBell, GoMarkGithub } from 'react-icons/go';\nimport { MdBrightness4, MdBrightness7 } from 'react-icons/md';\n\nexport const Wrapper = styled.header`\n  --headerTextColor: #fff;\n  --verticalPadding: 0.5rem;\n  --horizontalPadding: 1rem;\n  padding: var(--verticalPadding) var(--horizontalPadding);\n  background: var(--primaryColor);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  box-shadow: 0px 0px 5px 2px rgba(0, 0, 0, 0.5);\n  transition: 0.3s ease-in-out;\n  height: calc(var(--headerSize) - var(--verticalPadding) * 2);\n  width: calc(100vw - var(--horizontalPadding) * 2);\n  position: fixed;\n  top: 0;\n`;\n\nexport const Logo = styled.h2`\n  color: var(--headerTextColor);\n`;\n\nexport const HorizonalWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const HeaderButton = styled.button`\n  --iconSize: 1.5rem;\n  border: none;\n  background: transparent;\n  padding: 0.5rem;\n  margin: 0.5rem 0 0.5rem 0.5rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const BellIcon = styled(GoBell)`\n  color: var(--headerTextColor);\n  height: var(--iconSize);\n  width: var(--iconSize);\n`;\n\nexport const GithubIcon = styled(GoMarkGithub)`\n  color: var(--headerTextColor);\n  height: var(--iconSize);\n  width: var(--iconSize);\n`;\n\nexport const HighBrightnessIcon = styled(MdBrightness7)`\n  color: var(--headerTextColor);\n  height: var(--iconSize);\n  width: var(--iconSize);\n`;\n\nexport const LowBrightnessIcon = styled(MdBrightness4)`\n  color: var(--headerTextColor);\n  height: var(--iconSize);\n  width: var(--iconSize);\n`;\n","import React, { useContext } from 'react';\nimport {\n  Wrapper,\n  Logo,\n  HorizonalWrapper,\n  HeaderButton,\n  BellIcon,\n  GithubIcon,\n  HighBrightnessIcon,\n  LowBrightnessIcon,\n} from './styles';\nimport ThemeContext from '../../Contexts/ThemeContext';\n\nexport const Header = () => {\n  const { isDarkTheme, setIsDarkTheme } = useContext(ThemeContext);\n  return (\n    <Wrapper>\n      <Logo>Agent F</Logo>\n      <HorizonalWrapper>\n        <HeaderButton type=\"button\" onClick={e => e}>\n          <BellIcon />\n        </HeaderButton>\n        <HeaderButton\n          type=\"button\"\n          onClick={() => {\n            window.open('https://github.com/AgentF/agentf.github.io', '_blank');\n          }}\n        >\n          <GithubIcon />\n        </HeaderButton>\n        <HeaderButton\n          type=\"button\"\n          onClick={() => setIsDarkTheme(!isDarkTheme)}\n        >\n          {isDarkTheme ? <HighBrightnessIcon /> : <LowBrightnessIcon />}\n        </HeaderButton>\n      </HorizonalWrapper>\n    </Wrapper>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  --padding: 0.5rem;\n  margin-top: var(--headerSize);\n  padding: var(--padding);\n\n  height: calc(100vh - var(--headerSize) - var(--padding) * 2);\n  width: calc(100vw - var(--padding) * 2);\n\n  background-color: var(--backgroundColor);\n  transition: 0.3s ease-in-out;\n`;\n\nexport const ProjectsList = styled.ul`\n  margin: 0;\n  padding: 0;\n  list-style: none;\n\n  display: grid;\n  grid-template-columns: repeat(auto-fill, min(300px, 90vw));\n\n  max-height: 100%;\n  width: 100%;\n  overflow-y: auto;\n\n  justify-content: center;\n`;\n","import styled from 'styled-components';\nimport { AiOutlineLink } from 'react-icons/ai';\nimport { FaTrello } from 'react-icons/fa';\nimport { GoMarkGithub } from 'react-icons/go';\n\nexport const Wrapper = styled.li`\n  padding: 0.5rem;\n  margin: 0.5rem;\n  background-color: var(--cardColor);\n  border-radius: var(--borderRadius);\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  transition: 0.3s ease-in-out;\n`;\nexport const Img = styled.img`\n  max-width: 100%;\n`;\nexport const Title = styled.h3`\n  color: var(--primaryTextColor);\n`;\n\nexport const Desc = styled.p`\n  color: var(--secondaryTextColor);\n`;\n\nexport const ButtonLinkList = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LinkButton = styled.button`\n  --iconSize: 1.5rem;\n  border: none;\n  background: transparent;\n  padding: 0.5rem;\n  margin: 0.5rem 0 0.5rem 0.5rem;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const LinkIcon = styled(AiOutlineLink)`\n  color: var(--primaryTextColor);\n  height: var(--iconSize);\n  width: var(--iconSize);\n`;\n\nexport const TrelloIcon = styled(FaTrello)`\n  color: var(--primaryTextColor);\n  height: var(--iconSize);\n  width: var(--iconSize);\n`;\n\nexport const GithubIcon = styled(GoMarkGithub)`\n  color: var(--primaryTextColor);\n  height: var(--iconSize);\n  width: var(--iconSize);\n`;\n\nexport const LinkName = styled.p`\n  color: var(--primaryTextColor);\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Wrapper,\n  Img,\n  Title,\n  Desc,\n  ButtonLinkList,\n  LinkButton,\n  LinkIcon,\n  TrelloIcon,\n  GithubIcon,\n  LinkName,\n} from './styles';\n\nconst IconPicker = url => {\n  if (url.includes('github') && !url.includes('agentf')) {\n    return <GithubIcon />;\n  }\n  if (url.includes('trello')) {\n    return <TrelloIcon />;\n  }\n  return <LinkIcon />;\n};\n\nexport const Project = ({ desc, imgUrl, links, title }) => {\n  return (\n    <Wrapper>\n      <Img src={imgUrl} />\n      <Title>{title}</Title>\n      <Desc>{desc}</Desc>\n      <ButtonLinkList>\n        {links.map(({ name, url }) => (\n          <LinkButton\n            key={`${name}-link`}\n            type=\"button\"\n            onClick={() => {\n              window.open(url, '_blank');\n            }}\n          >\n            {IconPicker(url)}\n            <LinkName>{name}</LinkName>\n          </LinkButton>\n        ))}\n      </ButtonLinkList>\n    </Wrapper>\n  );\n};\n\nProject.propTypes = {\n  desc: PropTypes.string.isRequired,\n  imgUrl: PropTypes.string.isRequired,\n  links: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      url: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  title: PropTypes.string.isRequired,\n};\n","import React, { useContext } from 'react';\nimport { Wrapper, ProjectsList } from './styles';\nimport { Project } from '../Project';\nimport ProjectsContext from '../../Contexts/ProjectsContext';\n\nexport const Container = () => {\n  const {\n    projects: { data },\n  } = useContext(ProjectsContext);\n  return (\n    <Wrapper>\n      <ProjectsList>\n        {data.map(({ desc, id, imgUrl, links, title }) => (\n          <Project\n            key={id}\n            desc={desc}\n            id={id}\n            imgUrl={imgUrl}\n            links={links}\n            title={title}\n          />\n        ))}\n      </ProjectsList>\n    </Wrapper>\n  );\n};\n","/* eslint-disable no-undef */\n/* eslint-disable react/jsx-filename-extension */\nimport React, { useContext } from 'react';\nimport ReactDOM from 'react-dom';\nimport firebase from 'firebase';\nimport { GlobalStyle } from './styles/GlobalStyle';\nimport { ProjectsProvider } from './Contexts/ProjectsContext';\nimport ThemeContext, { ThemeProvider } from './Contexts/ThemeContext';\nimport { Header } from './components/Header';\nimport { Container } from './components/Container';\n\nfirebase.initializeApp({\n  apiKey: process.env.REACT_APP_FIREBASE_APIKEY,\n  authDomain: process.env.REACT_APP_FIREBASE_AUTHDOMAIN,\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASEURL,\n  projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: process.env.REACT_APP_FIREBASE_APPID,\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENTID,\n});\n\nconst App = () => {\n  const { isDarkTheme } = useContext(ThemeContext);\n  return (\n    <>\n      <GlobalStyle isDarkTheme={isDarkTheme} />\n      <Header />\n      <Container />\n    </>\n  );\n};\n\nReactDOM.render(\n  <ThemeProvider>\n    <ProjectsProvider>\n      <App />\n    </ProjectsProvider>\n  </ThemeProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}